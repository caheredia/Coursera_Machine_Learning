function [J, grad] = costFunctionReg(theta, X, y, lambda)
%COSTFUNCTIONREG Compute cost and gradient for logistic regression with regularization
%   J = COSTFUNCTIONREG(theta, X, y, lambda) computes the cost of using
%   theta as the parameter for regularized logistic regression and the
%   gradient of the cost w.r.t. to the parameters. 

% Initialize some useful values
m = length(y); % number of training examples

% You need to return the following variables correctly 
J = 0;
grad = zeros(size(theta));

% ====================== YOUR CODE HERE ======================
% Instructions: Compute the cost of a particular choice of theta.
%               You should set J to the cost.
%               Compute the partial derivatives and set grad to the partial
%               derivatives of the cost w.r.t. each parameter in theta

%Cost function 
J = 1/m*(-y'*log(sigmoid(X*theta)) - (1-y')*log(1-sigmoid(X*theta)))+1/(2*m)*lambda*theta(2:end)'*theta(2:end);

%this will be substituted into the first element of grad
%grad_zero = 1/m*X(1)'*(sigmoid(X(1)*theta(1))-y(1));

%Vectorizing the grad function, 
grad = 1/m*X'*(sigmoid(X*theta)-y) - [0,(lambda/m*theta(2:end))']'

%grad(1) = grad_zero

% =============================================================

end
